apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId build_versions.appId
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode build_versions.versionCode
        versionName build_versions.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        viewBinding = true
    }
    signingConfigs {
        release {
            storeFile rootProject.file("signing/app-release.jks")
            storePassword propOrDef('storePassword', "")
            keyAlias propOrDef('keyAlias', "")
            keyPassword propOrDef('keyPassword', "")
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-rules-navigation.pro'
            manifestPlaceholders = [crashlytics_enabled: false]
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-rules-navigation.pro'
            manifestPlaceholders = [crashlytics_enabled: true]
        }
    }
    aaptOptions {
        noCompress "tflite"
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation project(':stylize-legacy')
//    implementation project(':stylize-popart')
//    implementation project(':stylize-experimental')

    implementation deps.kotlin.stdlib
    implementation deps.kotlin.coroutines_core
    implementation deps.kotlin.coroutines_android

    implementation "androidx.window:window:1.0.0-alpha01"
    implementation 'androidx.activity:activity-ktx:1.1.0'
    implementation deps.androidx.appcompat
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation deps.androidx.core_ktx
    implementation 'androidx.fragment:fragment-ktx:1.3.0-alpha04'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    implementation 'com.github.fornewid:CameraView:1.0.0-alpha10'
    implementation "androidx.camera:camera-camera2:1.0.0-beta03"

    def lifecycle_version = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation deps.navigation.fragment_ktx

    implementation deps.util.timber

    implementation 'com.google.firebase:firebase-analytics:17.4.1'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0'
    implementation 'com.google.firebase:firebase-ml-vision:24.0.3'
    implementation 'com.google.firebase:firebase-ads:19.1.0'

    implementation 'com.google.android.play:core-ktx:1.7.0'

    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'
    implementation 'com.robinhood.ticker:ticker:2.0.2'

    testImplementation deps.test.junit
    androidTestImplementation deps.test.android
    androidTestImplementation deps.test.espresso
}

task buildNavigationProguard doLast {
    def navigationGraphXml = project.file("src/main/res/navigation/nav_graph.xml")

    // XmlParser didn't work so let me use the dirty hack
    if (!navigationGraphXml.text.contains("xmlns:app=\"http://schemas.android.com/apk/res-auto\"")) {
        throw new GradleScriptException("the namespace has been changed from app")
    }

    def fqdns = []

    navigationGraphXml.eachLine {
        def line = it.trim()

        if (line.startsWith("android:name=\"")) {
            def className = line.substring("android:name=\"".length(), line.lastIndexOf("\""))

            if (className.contains(".")) {
                fqdns << className
            }
        } else if (line.startsWith("app:argType=\"")) {
            def className = line.substring("app:argType=\"".length(), line.lastIndexOf("\""))

            if (className.contains(".")) {
                fqdns << className
            }
        }
    }

    project.file("proguard-rules-navigation.pro")
            .write(fqdns.sort().collect { "-keepnames class $it" }.join("\n"))
}

preBuild.dependsOn(buildNavigationProguard)
